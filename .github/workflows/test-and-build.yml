name: Test and Build
on:
  push:
  pull_request:
    branches:
      - master
jobs:
  test-backend:
    name: Test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 18.12
        uses: actions/setup-node@v1
        with:
          node-version: 18.12
      - name: Install dependencies
        working-directory: backend
        run: yarn --frozen-lockfile
      - name: Run tests
        working-directory: backend
        run: yarn test

  lint-helm-chart:
    name: Lint Helm chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Helm 3.11.0
        uses: azure/setup-helm@v1
        with:
          version: v3.11.0
      - name: Lint Helm chart
        working-directory: chart
        run: helm lint

  build-frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 19.4
        uses: actions/setup-node@v1
        with:
          node-version: 19.4
      - name: Install dependencies
        working-directory: frontend
        run: yarn --frozen-lockfile
      - name: Build frontend
        working-directory: frontend
        run: yarn build

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    needs:
      - test-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 18.12
        uses: actions/setup-node@v1
        with:
          node-version: 18.12
      - name: Install dependencies
        working-directory: backend
        run: yarn --frozen-lockfile
      - name: Build backend
        working-directory: backend
        run: yarn build

  build-frontend-docker-image:
    name: Build frontend Docker image
    runs-on: ubuntu-latest
    needs:
      - build-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Docker image
        run: Docker build -t ${{ github.repository_owner }}/${{ github.event.repository.name }}:frontend-latest frontend
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - name: Push Docker image
        run: Docker push ${{ github.repository_owner }}/${{ github.event.repository.name }}:frontend-latest

  build-backend-docker-image:
    name: Build backend Docker image
    runs-on: ubuntu-latest
    needs:
      - build-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Docker image
        run: Docker build -t ${{ github.repository_owner }}/${{ github.event.repository.name }}:backend-latest backend
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - name: Push Docker image
        run: Docker push ${{ github.repository_owner }}/${{ github.event.repository.name }}:backend-latest

  build-single-docker-image:
    name: Build single Docker image
    runs-on: ubuntu-latest
    needs:
      - build-backend
      - build-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Docker image
        run: Docker build -t ${{ github.repository_owner }}/${{ github.event.repository.name }}:latest .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - name: Push Docker image
        run: Docker push ${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
