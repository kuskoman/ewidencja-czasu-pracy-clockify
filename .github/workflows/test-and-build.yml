name: Test and Build
on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  lint-backend:
    name: Lint backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install dependencies
        run: yarn --from-lockfile
        working-directory: backend
      - name: Lint
        run: yarn lint:ci
        working-directory: backend

  lint-frontend:
    name: Lint frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install dependencies
        run: yarn --from-lockfile
        working-directory: frontend
      - name: Lint
        run: yarn ng lint
        working-directory: frontend

  test-backend:
    name: Test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install dependencies
        run: yarn --from-lockfile
        working-directory: backend
      - name: Test
        run: CI=true yarn test
        working-directory: backend

  test-backend-e2e:
    name: E2e test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install dependencies
        run: yarn --from-lockfile
        working-directory: backend
      - name: Test
        run: CI=true yarn test:e2e
        working-directory: backend

  build-frontend-docker-image:
    name: Build frontend Docker image
    runs-on: ubuntu-latest
    needs:
      - lint-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t frontend-latest frontend
      - name: Tag Docker image for master
        if: github.ref == 'refs/heads/master'
        run: docker tag frontend-latest ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:frontend-latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - name: Push master Docker image
        if: github.ref == 'refs/heads/master'
        run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:frontend-latest

  build-backend-docker-image:
    name: Build backend Docker image
    runs-on: ubuntu-latest
    needs:
      - lint-backend
      - test-backend
      - test-backend-e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t backend-latest backend
      - name: Tag Docker image for master
        if: github.ref == 'refs/heads/master'
        run: docker tag backend-latest ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:backend-latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - name: Push master Docker image
        if: github.ref == 'refs/heads/master'
        run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:backend-latest
